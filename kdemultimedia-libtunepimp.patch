diff -urbB kdemultimedia-3.5.0.org/juk/ktrm.cpp kdemultimedia-3.5.0/juk/ktrm.cpp
--- kdemultimedia-3.5.0.org/juk/ktrm.cpp	2005-10-10 14:57:16.000000000 +0000
+++ kdemultimedia-3.5.0/juk/ktrm.cpp	2005-11-24 19:51:36.000000000 +0000
@@ -42,7 +42,7 @@
 
 extern "C"
 {
-    static void TRMNotifyCallback(tunepimp_t pimp, void *data, TPCallbackEnum type, int fileId);
+    static void TRMNotifyCallback(tunepimp_t pimp, void *data, TPCallbackEnum type, int fileId, TPFileStatus);
 }
 
 /**
@@ -66,7 +66,7 @@
         int id;
 
         if(!m_fileMap.contains(lookup->file())) {
-            id = tp_AddFile(m_pimp, QFile::encodeName(lookup->file()));
+            id = tp_AddFile(m_pimp, QFile::encodeName(lookup->file()), 1);
             m_fileMap.insert(lookup->file(), id);
         }
         else {
@@ -120,7 +120,7 @@
         tp_SetAutoSaveThreshold(m_pimp, -1);
         tp_SetMoveFiles(m_pimp, false);
         tp_SetRenameFiles(m_pimp, false);
-        tp_SetUseUTF8(m_pimp, true);
+        tp_SetID3Encoding(m_pimp, eUTF8);
         tp_SetNotifyCallback(m_pimp, TRMNotifyCallback, 0);
 
         // Re-read proxy config.
@@ -287,7 +287,7 @@
  * Callback fuction for TunePimp lookup events.
  */
 
-static void TRMNotifyCallback(tunepimp_t pimp, void *, TPCallbackEnum type, int fileId)
+static void TRMNotifyCallback(tunepimp_t pimp, void *, TPCallbackEnum type, int fileId, TPFileStatus)
 {
     if(type != tpFileChanged)
         return;
@@ -503,10 +503,10 @@
                 KTRMResult result;
 
                 result.d->title = QString::fromUtf8(tracks[i]->name);
-                result.d->artist = QString::fromUtf8(tracks[i]->artist->name);
-                result.d->album = QString::fromUtf8(tracks[i]->album->name);
+                result.d->artist = QString::fromUtf8(tracks[i]->artist.name);
+                result.d->album = QString::fromUtf8(tracks[i]->album.name);
                 result.d->track = tracks[i]->trackNum;
-                result.d->year = tracks[i]->album->releaseYear;
+                result.d->year = tracks[i]->album.releaseYear;
                 result.d->relevance = tracks[i]->relevance;
 
                 d->results.append(result);
